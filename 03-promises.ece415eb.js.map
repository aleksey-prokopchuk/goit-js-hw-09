{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAASJ,SAASC,cAAc,mBAEtCF,EAAKM,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,eAAe,GACrB,MAAMC,EAAiBC,OAAOP,EAAWQ,OACnCC,EAAgBF,OAAON,EAAUO,OACjCE,EAAYH,OAAOL,EAAOM,OAEhC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAWC,GAAK,EAAG,CACrC,MAAMC,EAAQN,EAAiBG,EAAgBE,EACzCE,EAAWF,EAAI,EACrBG,YAAW,KAwBf,IAAuBC,EAAUC,GAAVD,EAvBHF,EAuBaG,EAvBHJ,EAwBrB,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAClCF,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,QA9BhBO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBX,QAAiBC,MAAW,CAE/CW,QAAS,SAIdC,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBQ,EAAA7B,GAAS8B,OAAOI,QACd,sBAAoBd,QAAeC,MAAW,CAE5CW,QAAS,WAIhBf,OAIPkB,QAAQC,IAAIlC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault(5);\n  const firstDelayData = Number(firstDelay.value);\n  const delayStepData = Number(delayStep.value);\n  const amountDta = Number(amount.value);\n\n  for (let i = 0; i < amountDta; i += 1) {\n    const delay = firstDelayData + delayStepData * i;\n    const position = i + 1;\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n            {\n              timeout: 2000,\n            }\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`,\n            {\n              timeout: 2000,\n            }\n          );\n        });\n    }, delay);\n  }\n}\n\nconsole.log(form);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","addEventListener","event","preventDefault","firstDelayData","Number","value","delayStepData","amountDta","i","delay1","position1","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","$parcel$interopDefault","Notify","success","timeout","catch","failure","console","log"],"version":3,"file":"03-promises.ece415eb.js.map"}